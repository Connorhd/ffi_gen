# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module Cairo
  extend FFI::Library
  ffi_lib 'cairo'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  # 
  # @method xlib_surface_create_with_xrender_format(dpy, drawable, screen, format, width, height)
  # @param [FFI::Pointer(*Display)] dpy 
  # @param [Integer] drawable 
  # @param [FFI::Pointer(*Screen)] screen 
  # @param [FFI::Pointer(*XRenderPictFormat)] format 
  # @param [Integer] width 
  # @param [Integer] height 
  # @return [FFI::Pointer(*SurfaceT)] 
  # @scope class
  attach_function :xlib_surface_create_with_xrender_format, :cairo_xlib_surface_create_with_xrender_format, [:pointer, :ulong, :pointer, :pointer, :int, :int], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_get_xrender_format(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [FFI::Pointer(*XRenderPictFormat)] 
  # @scope class
  attach_function :xlib_surface_get_xrender_format, :cairo_xlib_surface_get_xrender_format, [:pointer], :pointer
  
end
