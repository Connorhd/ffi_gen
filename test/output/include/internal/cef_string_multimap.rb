# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  # 
  # @method string_multimap_alloc()
  # @return [FFI::Pointer(StringMultimapT)] 
  # @scope class
  attach_function :string_multimap_alloc, :cef_string_multimap_alloc, [], :pointer
  
  # (Not documented)
  # 
  # @method string_multimap_size(map)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_size, :cef_string_multimap_size, [:pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_find_count(map, key)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @param [FFI::Pointer(*StringT)] key 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_find_count, :cef_string_multimap_find_count, [:pointer, :pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_enumerate(map, key, value_index, value)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @param [FFI::Pointer(*StringT)] key 
  # @param [Integer] value_index 
  # @param [FFI::Pointer(*StringT)] value 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_enumerate, :cef_string_multimap_enumerate, [:pointer, :pointer, :int, :pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_key(map, index, key)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @param [Integer] index 
  # @param [FFI::Pointer(*StringT)] key 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_key, :cef_string_multimap_key, [:pointer, :int, :pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_value(map, index, value)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @param [Integer] index 
  # @param [FFI::Pointer(*StringT)] value 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_value, :cef_string_multimap_value, [:pointer, :int, :pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_append(map, key, value)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @param [FFI::Pointer(*StringT)] key 
  # @param [FFI::Pointer(*StringT)] value 
  # @return [Integer] 
  # @scope class
  attach_function :string_multimap_append, :cef_string_multimap_append, [:pointer, :pointer, :pointer], :int
  
  # (Not documented)
  # 
  # @method string_multimap_clear(map)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @return [nil] 
  # @scope class
  attach_function :string_multimap_clear, :cef_string_multimap_clear, [:pointer], :void
  
  # (Not documented)
  # 
  # @method string_multimap_free(map)
  # @param [FFI::Pointer(StringMultimapT)] map 
  # @return [nil] 
  # @scope class
  attach_function :string_multimap_free, :cef_string_multimap_free, [:pointer], :void
  
end
