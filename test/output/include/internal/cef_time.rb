# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # Time information. Values should always be in UTC.
  # 
  # = Fields:
  # :year ::
  #   (Integer) Four digit year "2007"
  # :month ::
  #   (Integer) 1-based month (values 1 = January, etc.)
  # :day_of_week ::
  #   (Integer) 0-based day of week (0 = Sunday, etc.)
  # :day_of_month ::
  #   (Integer) 1-based day of month (1-31)
  # :hour ::
  #   (Integer) Hour within the current day (0-23)
  # :minute ::
  #   (Integer) Minute within the current hour (0-59)
  # :second ::
  #   (Integer) Second within the current minute (0-59 plus leap
  # :millisecond ::
  #   (Integer) Milliseconds within the current second (0-999)
  module TimeWrappers
    # @param [FFI::Pointer(*Time)] time 
    # @return [Integer] 
    def to_timet(time)
      CEF.time_to_timet(self, time)
    end
    
    # @param [FFI::Pointer(*Double)] time 
    # @return [Integer] 
    def to_doublet(time)
      CEF.time_to_doublet(self, time)
    end
  end
  
  class Time < FFI::Struct
    include TimeWrappers
    layout :year, :int,
           :month, :int,
           :day_of_week, :int,
           :day_of_month, :int,
           :hour, :int,
           :minute, :int,
           :second, :int,
           :millisecond, :int
  end
  
  # Converts cef_time_t to/from time_t. Returns true (1) on success and false (0)
  # on failure.
  # 
  # @method time_to_timet(time, time)
  # @param [Time] time 
  # @param [FFI::Pointer(*Time)] time 
  # @return [Integer] 
  # @scope class
  attach_function :time_to_timet, :cef_time_to_timet, [Time, :pointer], :int
  
  # (Not documented)
  # 
  # @method time_from_timet(time, time)
  # @param [Integer] time 
  # @param [Time] time 
  # @return [Integer] 
  # @scope class
  attach_function :time_from_timet, :cef_time_from_timet, [:long, Time], :int
  
  # Converts cef_time_t to/from a double which is the number of seconds since
  # epoch (Jan 1, 1970). Webkit uses this format to represent time. A value of 0
  # means "not initialized". Returns true (1) on success and false (0) on
  # failure.
  # 
  # @method time_to_doublet(time, time)
  # @param [Time] time 
  # @param [FFI::Pointer(*Double)] time 
  # @return [Integer] 
  # @scope class
  attach_function :time_to_doublet, :cef_time_to_doublet, [Time, :pointer], :int
  
  # (Not documented)
  # 
  # @method time_from_doublet(time, time)
  # @param [Float] time 
  # @param [Time] time 
  # @return [Integer] 
  # @scope class
  attach_function :time_from_doublet, :cef_time_from_doublet, [:double, Time], :int
  
end
