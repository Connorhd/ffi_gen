# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # Allocate a new string map.
  # 
  # @method string_list_alloc()
  # @return [FFI::Pointer(StringList)] 
  # @scope class
  attach_function :string_list_alloc, :cef_string_list_alloc, [], :pointer
  
  # Return the number of elements in the string list.
  # 
  # @method string_list_size(list)
  # @param [FFI::Pointer(StringList)] list 
  # @return [Integer] 
  # @scope class
  attach_function :string_list_size, :cef_string_list_size, [:pointer], :int
  
  # Retrieve the value at the specified zero-based string list index. Returns
  # true (1) if the value was successfully retrieved.
  # 
  # @method string_list_value(list, index, value)
  # @param [FFI::Pointer(StringList)] list 
  # @param [Integer] index 
  # @param [FFI::Pointer(*String)] value 
  # @return [Integer] 
  # @scope class
  attach_function :string_list_value, :cef_string_list_value, [:pointer, :int, :pointer], :int
  
  # Append a new value at the end of the string list.
  # 
  # @method string_list_append(list, value)
  # @param [FFI::Pointer(StringList)] list 
  # @param [FFI::Pointer(*String)] value 
  # @return [nil] 
  # @scope class
  attach_function :string_list_append, :cef_string_list_append, [:pointer, :pointer], :void
  
  # Clear the string list.
  # 
  # @method string_list_clear(list)
  # @param [FFI::Pointer(StringList)] list 
  # @return [nil] 
  # @scope class
  attach_function :string_list_clear, :cef_string_list_clear, [:pointer], :void
  
  # Free the string list.
  # 
  # @method string_list_free(list)
  # @param [FFI::Pointer(StringList)] list 
  # @return [nil] 
  # @scope class
  attach_function :string_list_free, :cef_string_list_free, [:pointer], :void
  
  # Creates a copy of an existing string list.
  # 
  # @method string_list_copy(list)
  # @param [FFI::Pointer(StringList)] list 
  # @return [FFI::Pointer(StringList)] 
  # @scope class
  attach_function :string_list_copy, :cef_string_list_copy, [:pointer], :pointer
  
end
