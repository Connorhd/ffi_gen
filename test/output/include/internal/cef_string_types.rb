# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  def string_wide_copy(src, src_len, output)
    string_wide_set(src, src_len, output, TRUE)
  end
  
  def string_utf8_copy(src, src_len, output)
    string_utf8_set(src, src_len, output, TRUE)
  end
  
  def string_utf16_copy(src, src_len, output)
    string_utf16_set(src, src_len, output, TRUE)
  end
  
  # // functions if you want this managed for you.
  # 
  # = Fields:
  # :str ::
  #   (FFI::Pointer(*WcharT)) 
  # :length ::
  #   (Integer) 
  # :dtor ::
  #   (FFI::Pointer(*)) 
  class CefStringWideT < FFI::Struct
    layout :str, :pointer,
           :length, :ulong,
           :dtor, :pointer
  end
  
  # (Not documented)
  # 
  # = Fields:
  # :str ::
  #   (String) 
  # :length ::
  #   (Integer) 
  # :dtor ::
  #   (FFI::Pointer(*)) 
  class CefStringUtf8T < FFI::Struct
    layout :str, :string,
           :length, :ulong,
           :dtor, :pointer
  end
  
  # (Not documented)
  # 
  # = Fields:
  # :str ::
  #   (FFI::Pointer(*Char16)) 
  # :length ::
  #   (Integer) 
  # :dtor ::
  #   (FFI::Pointer(*)) 
  class CefStringUtf16T < FFI::Struct
    layout :str, :pointer,
           :length, :ulong,
           :dtor, :pointer
  end
  
  # (Not documented)
  # 
  # @method string_wide_set(src, src_len, output, copy)
  # @param [FFI::Pointer(*WcharT)] src 
  # @param [Integer] src_len 
  # @param [CefStringWideT] output 
  # @param [Integer] copy 
  # @return [Integer] 
  # @scope class
  attach_function :string_wide_set, :cef_string_wide_set, [:pointer, :ulong, CefStringWideT, :int], :int
  
  # (Not documented)
  # 
  # @method string_utf8_set(src, src_len, output, copy)
  # @param [String] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf8T] output 
  # @param [Integer] copy 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf8_set, :cef_string_utf8_set, [:string, :ulong, CefStringUtf8T, :int], :int
  
  # (Not documented)
  # 
  # @method string_utf16_set(src, src_len, output, copy)
  # @param [FFI::Pointer(*Char16)] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf16T] output 
  # @param [Integer] copy 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf16_set, :cef_string_utf16_set, [:pointer, :ulong, CefStringUtf16T, :int], :int
  
  # (Not documented)
  # 
  # @method string_wide_clear(str)
  # @param [CefStringWideT] str 
  # @return [nil] 
  # @scope class
  attach_function :string_wide_clear, :cef_string_wide_clear, [CefStringWideT], :void
  
  # (Not documented)
  # 
  # @method string_utf8_clear(str)
  # @param [CefStringUtf8T] str 
  # @return [nil] 
  # @scope class
  attach_function :string_utf8_clear, :cef_string_utf8_clear, [CefStringUtf8T], :void
  
  # (Not documented)
  # 
  # @method string_utf16_clear(str)
  # @param [CefStringUtf16T] str 
  # @return [nil] 
  # @scope class
  attach_function :string_utf16_clear, :cef_string_utf16_clear, [CefStringUtf16T], :void
  
  # (Not documented)
  # 
  # @method string_wide_cmp(str1, str2)
  # @param [CefStringWideT] str1 
  # @param [CefStringWideT] str2 
  # @return [Integer] 
  # @scope class
  attach_function :string_wide_cmp, :cef_string_wide_cmp, [CefStringWideT, CefStringWideT], :int
  
  # (Not documented)
  # 
  # @method string_utf8_cmp(str1, str2)
  # @param [CefStringUtf8T] str1 
  # @param [CefStringUtf8T] str2 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf8_cmp, :cef_string_utf8_cmp, [CefStringUtf8T, CefStringUtf8T], :int
  
  # (Not documented)
  # 
  # @method string_utf16_cmp(str1, str2)
  # @param [CefStringUtf16T] str1 
  # @param [CefStringUtf16T] str2 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf16_cmp, :cef_string_utf16_cmp, [CefStringUtf16T, CefStringUtf16T], :int
  
  # (Not documented)
  # 
  # @method string_wide_to_utf8(src, src_len, output)
  # @param [FFI::Pointer(*WcharT)] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf8T] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_wide_to_utf8, :cef_string_wide_to_utf8, [:pointer, :ulong, CefStringUtf8T], :int
  
  # (Not documented)
  # 
  # @method string_utf8_to_wide(src, src_len, output)
  # @param [String] src 
  # @param [Integer] src_len 
  # @param [CefStringWideT] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf8_to_wide, :cef_string_utf8_to_wide, [:string, :ulong, CefStringWideT], :int
  
  # (Not documented)
  # 
  # @method string_wide_to_utf16(src, src_len, output)
  # @param [FFI::Pointer(*WcharT)] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf16T] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_wide_to_utf16, :cef_string_wide_to_utf16, [:pointer, :ulong, CefStringUtf16T], :int
  
  # (Not documented)
  # 
  # @method string_utf16_to_wide(src, src_len, output)
  # @param [FFI::Pointer(*Char16)] src 
  # @param [Integer] src_len 
  # @param [CefStringWideT] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf16_to_wide, :cef_string_utf16_to_wide, [:pointer, :ulong, CefStringWideT], :int
  
  # (Not documented)
  # 
  # @method string_utf8_to_utf16(src, src_len, output)
  # @param [String] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf16T] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf8_to_utf16, :cef_string_utf8_to_utf16, [:string, :ulong, CefStringUtf16T], :int
  
  # (Not documented)
  # 
  # @method string_utf16_to_utf8(src, src_len, output)
  # @param [FFI::Pointer(*Char16)] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf8T] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_utf16_to_utf8, :cef_string_utf16_to_utf8, [:pointer, :ulong, CefStringUtf8T], :int
  
  # (Not documented)
  # 
  # @method string_ascii_to_wide(src, src_len, output)
  # @param [String] src 
  # @param [Integer] src_len 
  # @param [CefStringWideT] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_ascii_to_wide, :cef_string_ascii_to_wide, [:string, :ulong, CefStringWideT], :int
  
  # (Not documented)
  # 
  # @method string_ascii_to_utf16(src, src_len, output)
  # @param [String] src 
  # @param [Integer] src_len 
  # @param [CefStringUtf16T] output 
  # @return [Integer] 
  # @scope class
  attach_function :string_ascii_to_utf16, :cef_string_ascii_to_utf16, [:string, :ulong, CefStringUtf16T], :int
  
  # (Not documented)
  # 
  # @method string_userfree_wide_alloc()
  # @return [CefStringWideT] 
  # @scope class
  attach_function :string_userfree_wide_alloc, :cef_string_userfree_wide_alloc, [], CefStringWideT
  
  # (Not documented)
  # 
  # @method string_userfree_utf8_alloc()
  # @return [CefStringUtf8T] 
  # @scope class
  attach_function :string_userfree_utf8_alloc, :cef_string_userfree_utf8_alloc, [], CefStringUtf8T
  
  # (Not documented)
  # 
  # @method string_userfree_utf16_alloc()
  # @return [CefStringUtf16T] 
  # @scope class
  attach_function :string_userfree_utf16_alloc, :cef_string_userfree_utf16_alloc, [], CefStringUtf16T
  
  # (Not documented)
  # 
  # @method string_userfree_wide_free(str)
  # @param [CefStringWideT] str 
  # @return [nil] 
  # @scope class
  attach_function :string_userfree_wide_free, :cef_string_userfree_wide_free, [CefStringWideT], :void
  
  # (Not documented)
  # 
  # @method string_userfree_utf8_free(str)
  # @param [CefStringUtf8T] str 
  # @return [nil] 
  # @scope class
  attach_function :string_userfree_utf8_free, :cef_string_userfree_utf8_free, [CefStringUtf8T], :void
  
  # (Not documented)
  # 
  # @method string_userfree_utf16_free(str)
  # @param [CefStringUtf16T] str 
  # @return [nil] 
  # @scope class
  attach_function :string_userfree_utf16_free, :cef_string_userfree_utf16_free, [CefStringUtf16T], :void
  
end
