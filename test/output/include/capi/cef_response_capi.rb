# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :is_read_only ::
  #   (FFI::Pointer(*)) ///
  # :get_status ::
  #   (FFI::Pointer(*)) ///
  # :set_status ::
  #   (FFI::Pointer(*)) ///
  # :get_status_text ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :set_status_text ::
  #   (FFI::Pointer(*)) ///
  # :get_mime_type ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :set_mime_type ::
  #   (FFI::Pointer(*)) ///
  # :get_header ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_header_map ::
  #   (FFI::Pointer(*)) ///
  # :set_header_map ::
  #   (FFI::Pointer(*)) ///
  class CefResponseT < FFI::Struct
    layout :base, :char,
           :is_read_only, :pointer,
           :get_status, :pointer,
           :set_status, :pointer,
           :get_status_text, :pointer,
           :set_status_text, :pointer,
           :get_mime_type, :pointer,
           :set_mime_type, :pointer,
           :get_header, :pointer,
           :get_header_map, :pointer,
           :set_header_map, :pointer
  end
  
  # (Not documented)
  # 
  # @method response_create()
  # @return [CefResponseT] 
  # @scope class
  attach_function :response_create, :cef_response_create, [], CefResponseT
  
end
