# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  class CefBrowserT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefFrameT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefContextMenuParamsT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefMenuModelT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefBrowserT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefFrameT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefContextMenuParamsT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefBrowserT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class CefFrameT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :on_before_context_menu ::
  #   (FFI::Pointer(*)) ///
  # :on_context_menu_command ::
  #   (FFI::Pointer(*)) ///
  # :on_context_menu_dismissed ::
  #   (FFI::Pointer(*)) ///
  class CefContextMenuHandlerT < FFI::Struct
    layout :base, :char,
           :on_before_context_menu, :pointer,
           :on_context_menu_command, :pointer,
           :on_context_menu_dismissed, :pointer
  end
  
  # ///
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :get_xcoord ::
  #   (FFI::Pointer(*)) ///
  # :get_ycoord ::
  #   (FFI::Pointer(*)) ///
  # :get_type_flags ::
  #   (FFI::Pointer(*)) ///
  # :get_link_url ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_unfiltered_link_url ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_source_url ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :is_image_blocked ::
  #   (FFI::Pointer(*)) ///
  # :get_page_url ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_frame_url ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_frame_charset ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_media_type ::
  #   (FFI::Pointer(*)) ///
  # :get_media_state_flags ::
  #   (FFI::Pointer(*)) ///
  # :get_selection_text ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :is_editable ::
  #   (FFI::Pointer(*)) ///
  # :is_speech_input_enabled ::
  #   (FFI::Pointer(*)) ///
  # :get_edit_state_flags ::
  #   (FFI::Pointer(*)) ///
  class CefContextMenuParamsT < FFI::Struct
    layout :base, :char,
           :get_xcoord, :pointer,
           :get_ycoord, :pointer,
           :get_type_flags, :pointer,
           :get_link_url, :pointer,
           :get_unfiltered_link_url, :pointer,
           :get_source_url, :pointer,
           :is_image_blocked, :pointer,
           :get_page_url, :pointer,
           :get_frame_url, :pointer,
           :get_frame_charset, :pointer,
           :get_media_type, :pointer,
           :get_media_state_flags, :pointer,
           :get_selection_text, :pointer,
           :is_editable, :pointer,
           :is_speech_input_enabled, :pointer,
           :get_edit_state_flags, :pointer
  end
  
end
