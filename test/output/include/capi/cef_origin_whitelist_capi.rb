# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  # 
  # @method add_cross_origin_whitelist_entry(source_origin, target_protocol, target_domain, allow_target_subdomains)
  # @param [FFI::Pointer(*StringT)] source_origin 
  # @param [FFI::Pointer(*StringT)] target_protocol 
  # @param [FFI::Pointer(*StringT)] target_domain 
  # @param [Integer] allow_target_subdomains 
  # @return [Integer] 
  # @scope class
  attach_function :add_cross_origin_whitelist_entry, :cef_add_cross_origin_whitelist_entry, [:pointer, :pointer, :pointer, :int], :int
  
  # (Not documented)
  # 
  # @method remove_cross_origin_whitelist_entry(source_origin, target_protocol, target_domain, allow_target_subdomains)
  # @param [FFI::Pointer(*StringT)] source_origin 
  # @param [FFI::Pointer(*StringT)] target_protocol 
  # @param [FFI::Pointer(*StringT)] target_domain 
  # @param [Integer] allow_target_subdomains 
  # @return [Integer] 
  # @scope class
  attach_function :remove_cross_origin_whitelist_entry, :cef_remove_cross_origin_whitelist_entry, [:pointer, :pointer, :pointer, :int], :int
  
  # (Not documented)
  # 
  # @method clear_cross_origin_whitelist()
  # @return [Integer] 
  # @scope class
  attach_function :clear_cross_origin_whitelist, :cef_clear_cross_origin_whitelist, [], :int
  
end
