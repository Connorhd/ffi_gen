# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :is_valid ::
  #   (FFI::Pointer(*)) ///
  # :is_owned ::
  #   (FFI::Pointer(*)) ///
  # :copy ::
  #   (FFI::Pointer(*)) ///
  # :get_size ::
  #   (FFI::Pointer(*)) ///
  # :get_data ::
  #   (FFI::Pointer(*)) ///
  class CefBinaryValueT < FFI::Struct
    layout :base, :char,
           :is_valid, :pointer,
           :is_owned, :pointer,
           :copy, :pointer,
           :get_size, :pointer,
           :get_data, :pointer
  end
  
  # (Not documented)
  # 
  # @method binary_value_create(data, data_size)
  # @param [FFI::Pointer(*Void)] data 
  # @param [Integer] data_size 
  # @return [CefBinaryValueT] 
  # @scope class
  attach_function :binary_value_create, :cef_binary_value_create, [:pointer, :ulong], CefBinaryValueT
  
  # ///
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :is_valid ::
  #   (FFI::Pointer(*)) ///
  # :is_owned ::
  #   (FFI::Pointer(*)) ///
  # :is_read_only ::
  #   (FFI::Pointer(*)) ///
  # :copy ::
  #   (FFI::Pointer(*)) ///
  # :get_size ::
  #   (FFI::Pointer(*)) ///
  # :clear ::
  #   (FFI::Pointer(*)) ///
  # :has_key ::
  #   (FFI::Pointer(*)) ///
  # :get_keys ::
  #   (FFI::Pointer(*)) ///
  # :remove ::
  #   (FFI::Pointer(*)) ///
  # :get_type ::
  #   (FFI::Pointer(*)) ///
  # :get_bool ::
  #   (FFI::Pointer(*)) ///
  # :get_int ::
  #   (FFI::Pointer(*)) ///
  # :get_double ::
  #   (FFI::Pointer(*)) ///
  # :get_string ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_binary ::
  #   (FFI::Pointer(*)) ///
  # :get_dictionary ::
  #   (FFI::Pointer(*)) ///
  # :get_list ::
  #   (FFI::Pointer(*)) ///
  # :set_null ::
  #   (FFI::Pointer(*)) ///
  # :set_bool ::
  #   (FFI::Pointer(*)) ///
  # :set_int ::
  #   (FFI::Pointer(*)) ///
  # :set_double ::
  #   (FFI::Pointer(*)) ///
  # :set_string ::
  #   (FFI::Pointer(*)) ///
  # :set_binary ::
  #   (FFI::Pointer(*)) ///
  # :set_dictionary ::
  #   (FFI::Pointer(*)) ///
  # :set_list ::
  #   (FFI::Pointer(*)) ///
  class CefDictionaryValueT < FFI::Struct
    layout :base, :char,
           :is_valid, :pointer,
           :is_owned, :pointer,
           :is_read_only, :pointer,
           :copy, :pointer,
           :get_size, :pointer,
           :clear, :pointer,
           :has_key, :pointer,
           :get_keys, :pointer,
           :remove, :pointer,
           :get_type, :pointer,
           :get_bool, :pointer,
           :get_int, :pointer,
           :get_double, :pointer,
           :get_string, :pointer,
           :get_binary, :pointer,
           :get_dictionary, :pointer,
           :get_list, :pointer,
           :set_null, :pointer,
           :set_bool, :pointer,
           :set_int, :pointer,
           :set_double, :pointer,
           :set_string, :pointer,
           :set_binary, :pointer,
           :set_dictionary, :pointer,
           :set_list, :pointer
  end
  
  # (Not documented)
  # 
  # @method dictionary_value_create()
  # @return [CefDictionaryValueT] 
  # @scope class
  attach_function :dictionary_value_create, :cef_dictionary_value_create, [], CefDictionaryValueT
  
  # ///
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :is_valid ::
  #   (FFI::Pointer(*)) ///
  # :is_owned ::
  #   (FFI::Pointer(*)) ///
  # :is_read_only ::
  #   (FFI::Pointer(*)) ///
  # :copy ::
  #   (FFI::Pointer(*)) ///
  # :set_size ::
  #   (FFI::Pointer(*)) ///
  # :get_size ::
  #   (FFI::Pointer(*)) ///
  # :clear ::
  #   (FFI::Pointer(*)) ///
  # :remove ::
  #   (FFI::Pointer(*)) ///
  # :get_type ::
  #   (FFI::Pointer(*)) ///
  # :get_bool ::
  #   (FFI::Pointer(*)) ///
  # :get_int ::
  #   (FFI::Pointer(*)) ///
  # :get_double ::
  #   (FFI::Pointer(*)) ///
  # :get_string ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_binary ::
  #   (FFI::Pointer(*)) ///
  # :get_dictionary ::
  #   (FFI::Pointer(*)) ///
  # :get_list ::
  #   (FFI::Pointer(*)) ///
  # :set_null ::
  #   (FFI::Pointer(*)) ///
  # :set_bool ::
  #   (FFI::Pointer(*)) ///
  # :set_int ::
  #   (FFI::Pointer(*)) ///
  # :set_double ::
  #   (FFI::Pointer(*)) ///
  # :set_string ::
  #   (FFI::Pointer(*)) ///
  # :set_binary ::
  #   (FFI::Pointer(*)) ///
  # :set_dictionary ::
  #   (FFI::Pointer(*)) ///
  # :set_list ::
  #   (FFI::Pointer(*)) ///
  class CefListValueT < FFI::Struct
    layout :base, :char,
           :is_valid, :pointer,
           :is_owned, :pointer,
           :is_read_only, :pointer,
           :copy, :pointer,
           :set_size, :pointer,
           :get_size, :pointer,
           :clear, :pointer,
           :remove, :pointer,
           :get_type, :pointer,
           :get_bool, :pointer,
           :get_int, :pointer,
           :get_double, :pointer,
           :get_string, :pointer,
           :get_binary, :pointer,
           :get_dictionary, :pointer,
           :get_list, :pointer,
           :set_null, :pointer,
           :set_bool, :pointer,
           :set_int, :pointer,
           :set_double, :pointer,
           :set_string, :pointer,
           :set_binary, :pointer,
           :set_dictionary, :pointer,
           :set_list, :pointer
  end
  
  # (Not documented)
  # 
  # @method list_value_create()
  # @return [CefListValueT] 
  # @scope class
  attach_function :list_value_create, :cef_list_value_create, [], CefListValueT
  
end
