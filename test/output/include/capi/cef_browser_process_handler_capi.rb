# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  class ProxyHandler < FFI::Struct
    layout :dummy, :char
  end
  
  # Structure used to implement browser process callbacks. The functions of this
  # structure will be called on the browser process main thread unless otherwise
  # indicated.
  # 
  # = Fields:
  # :base ::
  #   (unknown) Base structure.
  # :get_proxy_handler ::
  #   (FFI::Pointer(*)) Return the handler for proxy events. If no handler is returned the default
  #   system handler will be used. This function is called on the browser process
  #   IO thread.
  # :on_context_initialized ::
  #   (FFI::Pointer(*)) Called on the browser process UI thread immediately after the CEF context
  #   has been initialized.
  class BrowserProcessHandler < FFI::Struct
    layout :base, :char,
           :get_proxy_handler, :pointer,
           :on_context_initialized, :pointer
  end
  
end
