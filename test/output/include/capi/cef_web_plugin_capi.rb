# Generated by ffi-gen. Please do not change this file by hand.

require 'ffi'

module CEF
  extend FFI::Library
  ffi_lib 'cef'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  # (Not documented)
  class CefWebPluginInfoVisitorT < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  # 
  # @method visit_web_plugin_info(visitor)
  # @param [CefWebPluginInfoVisitorT] visitor 
  # @return [nil] 
  # @scope class
  attach_function :visit_web_plugin_info, :cef_visit_web_plugin_info, [CefWebPluginInfoVisitorT], :void
  
  # ///
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :get_name ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_path ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_version ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  # :get_description ::
  #   (FFI::Pointer(*)) // The resulting string must be freed by calling cef_string_userfree_free().
  class CefWebPluginInfoT < FFI::Struct
    layout :base, :char,
           :get_name, :pointer,
           :get_path, :pointer,
           :get_version, :pointer,
           :get_description, :pointer
  end
  
  # ///
  # 
  # = Fields:
  # :base ::
  #   (unknown) ///
  # :visit ::
  #   (FFI::Pointer(*)) ///
  class CefWebPluginInfoVisitorT < FFI::Struct
    layout :base, :char,
           :visit, :pointer
  end
  
end
